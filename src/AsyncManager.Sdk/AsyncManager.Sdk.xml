<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nexus.Link.AsyncManager.Sdk</name>
    </assembly>
    <members>
        <member name="T:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest">
            <summary>
            Keeps all the information about an asynchronous request
            </summary>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest.#ctor(Nexus.Link.AsyncManager.Sdk.IAsyncRequestClient,System.Net.Http.HttpMethod,System.String,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="asyncRequestClient">The client to use for when sending the request to the async request manager.</param>
            <param name="method">The HTTP method for the request.</param>
            <param name="url">The URL where the request should be sent.</param>
            <param name="priority">The priority for the request in the range [0.0, 1.0] where 1.0 is highest priority.</param>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest.AddHeader(System.String,System.String[])">
            <inheritdoc />
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest.AddHeader(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest.SetContent(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest.SetContent(Newtonsoft.Json.Linq.JToken)">
            <inheritdoc />
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest.SetContentAsJson(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest.SetExecuteBefore(System.DateTimeOffset)">
            <inheritdoc />
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest.SetExecuteBefore(System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest.SetExecuteAfter(System.DateTimeOffset)">
            <inheritdoc />
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest.SetExecuteAfter(System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest.SetCallbackUrl(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest.SetCallbackUrl(System.Uri)">
            <inheritdoc />
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest.AddCallbackHeader(System.String,System.String[])">
            <inheritdoc />
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest.AddCallbackHeader(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest.SendAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest.SetCallbackContext(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest.SetCallbackContextAsJson(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Nexus.Link.AsyncManager.Sdk.AsyncHttpResponse">
            <summary>
            Keeps the information about the response to an asynchronous request
            </summary>
        </member>
        <member name="P:Nexus.Link.AsyncManager.Sdk.AsyncHttpResponse.HasCompleted">
            <summary>
            Convenience for testing if the request has completed.
            </summary>
        </member>
        <member name="T:Nexus.Link.AsyncManager.Sdk.AsyncRequestClient">
            <summary>
            A client for using an async request management capability.
            </summary>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncRequestClient.#ctor(Nexus.Link.Libraries.Core.MultiTenant.Model.Tenant,Nexus.Link.Libraries.Web.RestClientHelper.IHttpSender,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="tenant"></param>
            <param name="httpSender">The sender that will be used for posting the request to the async request manager.</param>
            <param name="baseUrl">The base URL where requests can be sent.</param>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncRequestClient.CreateRequest(System.Net.Http.HttpMethod,System.String,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncRequestClient.SendRequestAsync(Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.AsyncRequestClient.GetFinalResponseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the final response if it exists, otherwise null.
            </summary>
        </member>
        <member name="T:Nexus.Link.AsyncManager.Sdk.IAsyncHttpRequest">
            <summary>
            Methods for adding things to a request.
            </summary>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncHttpRequest.AddHeader(System.String,System.String[])">
            <summary>
            Add one header to the <see cref="P:Nexus.Link.Capabilities.AsyncRequestMgmt.Abstract.Entities.HttpRequestCreate.Headers"/> property.
            </summary>
            <param name="name">Name of the header.</param>
            <param name="values">The values for the header.</param>
            <remarks>If a header with the same name already exists, the values are appended to the existing header values.</remarks>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncHttpRequest.AddHeader(System.String,System.String)">
            <summary>
            Add one header to the <see cref="P:Nexus.Link.Capabilities.AsyncRequestMgmt.Abstract.Entities.HttpRequestCreate.Headers"/> property.
            </summary>
            <param name="name">Name of the header.</param>
            <param name="value">The value for the header.</param>
            <remarks>If a header with the same name already exists, the values are appended to the existing header values.</remarks>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncHttpRequest.SetContent(System.String,System.String)">
            <summary>
            Set the <see cref="P:Nexus.Link.Capabilities.AsyncRequestMgmt.Abstract.Entities.HttpRequestCreate.Content"/> property to the data provided in <paramref name="content"/> with
            content type set to <paramref name="contentType"/>.
            </summary>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncHttpRequest.SetContent(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set the <see cref="P:Nexus.Link.Capabilities.AsyncRequestMgmt.Abstract.Entities.HttpRequestCreate.Content"/> property to the data provided in <paramref name="content"/> with
            content type set to "application/json".
            </summary>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncHttpRequest.SetContentAsJson(System.Object)">
            <summary>
            Set the <see cref="P:Nexus.Link.Capabilities.AsyncRequestMgmt.Abstract.Entities.HttpRequestCreate.Content"/> property to the data provided in <paramref name="content"/> with
            content type set to "application/json".
            </summary>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncHttpRequest.SetExecuteBefore(System.DateTimeOffset)">
            <summary>
            Set a limit for when the request must have been sent to the server in the <see cref="P:Nexus.Link.Capabilities.AsyncRequestMgmt.Abstract.Entities.RequestMetadata.ExecuteBefore"/> property.
            </summary>
            <param name="before">The absolute time the request must have been sent to the server.</param>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncHttpRequest.SetExecuteBefore(System.TimeSpan)">
            <summary>
            Set a limit for when the request must have been sent to the server in the <see cref="P:Nexus.Link.Capabilities.AsyncRequestMgmt.Abstract.Entities.RequestMetadata.ExecuteBefore"/> property.
            </summary>
            <param name="before">A relative time from now when the request must have been sent to the server.</param>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncHttpRequest.SetExecuteAfter(System.DateTimeOffset)">
            <summary>
            Set the earliest time that the request can be sent to the server in the <see cref="P:Nexus.Link.Capabilities.AsyncRequestMgmt.Abstract.Entities.RequestMetadata.ExecuteAfter"/> property.
            </summary>
            <param name="after">Time limit as absolute time.</param>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncHttpRequest.SetExecuteAfter(System.TimeSpan)">
            <summary>
            Set the earliest time that the request can be sent to the server in the <see cref="P:Nexus.Link.Capabilities.AsyncRequestMgmt.Abstract.Entities.RequestMetadata.ExecuteAfter"/> property.
            </summary>
            <param name="after">A relative time from now.</param>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncHttpRequest.SetCallbackUrl(System.String)">
            <summary>
            Set the callback URL to <paramref name="url"/>.
            </summary>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncHttpRequest.SetCallbackUrl(System.Uri)">
            <summary>
            Set the callback URL to absolute path of <paramref name="uri"/>.
            </summary>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncHttpRequest.AddCallbackHeader(System.String,System.String[])">
            <summary>
            Add one header to the <see cref="P:Nexus.Link.Capabilities.AsyncRequestMgmt.Abstract.Entities.RequestMetadata.Callback"/> <see cref="P:Nexus.Link.Capabilities.AsyncRequestMgmt.Abstract.Entities.RequestCallback.Headers"/> property.
            </summary>
            <param name="name">Name of the header.</param>
            <param name="values">The values for the header.</param>
            <remarks>If a header with the same name already exists, the values are appended to the existing header values.</remarks>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncHttpRequest.AddCallbackHeader(System.String,System.String)">
            <summary>
            Add one header to the <see cref="P:Nexus.Link.Capabilities.AsyncRequestMgmt.Abstract.Entities.RequestMetadata.Callback"/> <see cref="P:Nexus.Link.Capabilities.AsyncRequestMgmt.Abstract.Entities.RequestCallback.Headers"/> property.
            </summary>
            <param name="name">Name of the header.</param>
            <param name="value">The value for the header.</param>
            <remarks>If a header with the same name already exists, the values are appended to the existing header values.</remarks>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncHttpRequest.SendAsync(System.Threading.CancellationToken)">
            <summary>
            Send the request to the async request manager.
            </summary>
            <param name="cancellationToken">Token for cancelling a call</param>
            <returns>The Guid for the accepted request.</returns>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncHttpRequest.SetCallbackContext(System.String)">
            <summary>
            Set the callback context to <paramref name="context"/>.
            </summary>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncHttpRequest.SetCallbackContextAsJson(System.Object)">
            <summary>
            Set the callback context to <paramref name="context"/>.
            </summary>
        </member>
        <member name="T:Nexus.Link.AsyncManager.Sdk.IAsyncRequestClient">
            <summary>
            A client for using an async request management capability.
            </summary>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncRequestClient.CreateRequest(System.Net.Http.HttpMethod,System.String,System.Double)">
            <summary>
            Create a <see cref="T:Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest"/> that has convenience methods for setting up a <see cref="T:Nexus.Link.Capabilities.AsyncRequestMgmt.Abstract.Entities.HttpRequestCreate"/>.
            </summary>
            <param name="method">The HTTP method for the request.</param>
            <param name="url">The URL where the request should be sent.</param>
            <param name="priority">The priority for the request in the range [0.0, 1.0] where 1.0 is highest priority.</param>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncRequestClient.GetFinalResponseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the final response from the async request manager, i.e. ignore intermediate responses that are not considered to be the final response.
            </summary>
            <param name="requestId"></param>
            <param name="cancellationToken">Token for cancelling a call</param>
            <returns>The final response or null if the final response is not yet available.</returns>
        </member>
        <member name="M:Nexus.Link.AsyncManager.Sdk.IAsyncRequestClient.SendRequestAsync(Nexus.Link.AsyncManager.Sdk.AsyncHttpRequest,System.Threading.CancellationToken)">
            <summary>
            Send one asynchronous request to the async request manager.
            </summary>
            <param name="request">The request to send.</param>
            <param name="cancellationToken">Token for cancelling a call</param>
            <returns>The request id for the posted request.</returns>
        </member>
    </members>
</doc>
